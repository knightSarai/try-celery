version: "3.8"
   
services:
    server:
        build:
          context: ./server
        container_name: server
        command: python manage.py runserver 0.0.0.0:8000
        volumes:
            - ./server:/usr/src/app/
        ports:
            - "8000:8000"
        environment:
            - DEBUG=1
            - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
            - CELERY_BROKER=redis://redis:6379/0
            - CELERY_BACKEND=django-db
        depends_on:
            - db
            - redis
    worker:
        build:
          context: ./worker
        container_name: worker
        command: python manage.py runserver 0.0.0.0:8001
        volumes:
            - ./worker/:/usr/src/app/
        ports:
            - "8001:8001"
        environment:
            - DEBUG=1
            - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
            - CELERY_BROKER='amqp://rabbitmq'
        depends_on:
            - db
            - redis
    celery:
        restart: always
        build:
          context: ./worker
        command: python manage.py celery
        volumes:
            - ./worker:/usr/src/app
        environment:
            - DEBUG=1
            - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
            - CELERY_BROKER=redis://redis:6379/0
            - CELERY_BACKEND=redis://redis:6379/0
        depends_on:
            - worker
            - redis
            - db
    db:
        image: postgres
        container_name: db
        environment:
            - POSTGRES_DB=postgres
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
        volumes:
            - ./pgdata/db:/var/lib/postgresql/data/
    redis:
        image: "redis:alpine"
    rabbitmq:
      container_name: rabbitmq
      restart: always
      image: rabbitmq:3.10-alpine
      volumes:
        - ./rabbitmq_data:/var/lib/rabbitmq
    server-migrations:
      build:
        context: ./server
      command: python manage.py migrate
      volumes:
          - ./server:/usr/src/app
      depends_on:
        - db
        
volumes:
    pgdata:
    rabbitmq_data:
